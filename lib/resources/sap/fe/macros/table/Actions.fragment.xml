<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	xmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:core="sap.ui.core"
	xmlns="sap.m"
	template:require="{
		ID: 'sap/fe/core/helpers/StableIdHelper',
		COMMON: 'sap/fe/macros/CommonHelper',
		CORE: 'sap/fe/core/AnnotationHelper',
		FIELD: 'sap/fe/macros/field/FieldHelper',
		TABLE: 'sap/fe/macros/table/TableHelper'
	}"
>
	<template:if test="{this>actions}">
		<template:repeat list="{actions>}" var="action">
			<template:if test="{= ${action>type} === 'Default'}">
				<template:then>
					<Button
						core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
						id="{= ID.generate([${this>id},${action>id}])}"
						text="{action>text}"
						press="{= CORE.buildActionWrapper(${action>}, ${this>})}"
						type="Transparent"
						visible="{action>visible}"
						enabled="{action>enabled}"
					/>
				</template:then>
				<template:else>
					<template:with path="action>annotationPath" var="dataField">
						<template:if test="{= ${action>type} === 'ForAction'}">
							<template:then>
								<template:if test="{= ${this>onCallAction} }">
									<template:with path="dataField>Action" helper="COMMON.getActionContext" var="actionContext">
										<template:with path="dataField>Action" helper="COMMON.getPathToBoundActionOverload" var="isBound">
											<template:if test="{= ${isBound>$IsBound} !== true || ${actionContext>@Org.OData.Core.V1.OperationAvailable} !== false }">
												<Button
													unittest:id="DataFieldForActionButton"
													id="{= ID.generate([${this>id}, ${dataField>}])}"
													text="{dataField>Label}"
													press="{= TABLE.pressEventDataFieldForActionButton(${this>}, ${dataField>}, ${collection>@sapui.name}, ${lineItem>@@TABLE.getOperationAvailableMap}, ${actionContext>},${action>isNavigable}) }"
													enabled="{= TABLE.isDataFieldForActionEnabled(${this>},${dataField>},${isBound>$IsBound}, undefined, ${actionContext>}, ${action>enableOnSelect})}"
													visible="{= ${dataField>./@com.sap.vocabularies.UI.v1.Hidden} ? (${dataField>./@com.sap.vocabularies.UI.v1.Hidden/$Path} ? ${dataField>./@com.sap.vocabularies.UI.v1.Hidden/$Path@@TABLE.getHiddenPathExpressionForTableActionsAndIBN} : !${dataField>./@com.sap.vocabularies.UI.v1.Hidden}) : true
													}"
												>
												</Button>
											</template:if>
										</template:with>
									</template:with>
								</template:if>
							</template:then>
							<template:elseif test="{= ${action>type} === 'ForNavigation'}">
								<Button
									unittest:id="DataFieldForIntentBasedNavigationButton"
									id="{= ID.generate([${this>id}, ${dataField>}])}"
									text="{dataField>Label}"
									press="{= TABLE.pressEventDataFieldForIntentBasedNavigation(${this>},${dataField>})}"
									enabled="{= TABLE.isDataFieldForActionEnabled(${this>}, ${dataField>}, ${dataField>RequiresContext}, true)}"
									visible="{= ${dataField>./@com.sap.vocabularies.UI.v1.Hidden} ? (${dataField>./@com.sap.vocabularies.UI.v1.Hidden/$Path} ? ${dataField>./@com.sap.vocabularies.UI.v1.Hidden/$Path@@TABLE.getHiddenPathExpressionForTableActionsAndIBN} : !${dataField>./@com.sap.vocabularies.UI.v1.Hidden}) : true}"
									macrodata:IBNData="{= !${dataField>RequiresContext} ? '{semanticObject: \'' +  ${dataField>SemanticObject} + '\' , action : \'' + ${dataField>Action} + '\'}' : undefined}"
								/>
							</template:elseif>
						</template:if>
					</template:with>
				</template:else>
			</template:if>
		</template:repeat>
	</template:if>
	<template:if
		test="{= ${collection>@com.sap.vocabularies.Common.v1.DraftRoot} || ${targetCollection>@com.sap.vocabularies.Common.v1.DraftNode} || ${collection>@@CORE.isStickySessionSupported} || TABLE.getIBNData(${this>})}"
	>
		<template:if test="{= TABLE.createButtonTemplating(${this>}, false) }">
			<Button
				unittest:id="CreateButtonTemplate"
				id="{= ID.generate([${this>id}, 'StandardAction', 'Create'])}"
				text="{this.i18n>M_COMMON_TABLE_CREATE}"
				press="{= TABLE.pressEventForCreateButton(${this>})}"
				type="Transparent"
				visible="{= ${this>showCreate} || true }"
				enabled="{= TABLE.isCreateButtonEnabled(
					${collection>},
					${collection>@sapui.name},
					${parentEntitySet>@Org.OData.Capabilities.V1.NavigationRestrictions/RestrictedProperties},
					${targetCollection>@Org.OData.Capabilities.V1.InsertRestrictions/Insertable}
				)}"
				macrodata:IBNData="{= TABLE.getIBNData(${this>})}"
			/>
		</template:if>
	</template:if>
	<template:if
		test="{= ${collection>@com.sap.vocabularies.Common.v1.DraftRoot} || ${targetCollection>@com.sap.vocabularies.Common.v1.DraftNode} || ${collection>@@CORE.isStickySessionSupported}}"
	>
		<template:if test="{= TABLE.deleteButtonTemplating(${this>}) }">
			<Button
				unittest:id="DeleteButtonTemplate"
				id="{= ID.generate([${this>id}, 'StandardAction', 'Delete'])}"
				text="{this.i18n>M_COMMON_TABLE_DELETE}"
				press="{= TABLE.pressEventForDeleteButton(${this>}, ${collection>@sapui.name})}"
				type="Transparent"
				visible="{this>showDelete}"
				enabled="{= TABLE.isDeleteButtonEnabled(${this>})}"
			/>
		</template:if>
	</template:if>
	<template:if test="{this>onPasteButtonPressed}">
		<Button
			id="{= ID.generate([${this>id}, 'StandardAction', 'Paste'])}"
			text="{this.i18n>M_COMMON_TABLE_PASTE}"
			visible="{=TABLE.isPasteEnabled(
					${this>},
					${this>creationMode},
					${collection>},
					${collection>@sapui.name},
					${parentEntitySet>@Org.OData.Capabilities.V1.NavigationRestrictions/RestrictedProperties},
					${targetCollection>@Org.OData.Capabilities.V1.InsertRestrictions/Insertable},
					true)}"
			press="{= TABLE.pressEventForPasteButton(${this>})}"
		/>
	</template:if>
</core:FragmentDefinition>
